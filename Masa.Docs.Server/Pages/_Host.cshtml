@page "/"
@using Masa.Docs.Shared
@using Microsoft.AspNetCore.Components.Web
@namespace Masa.Docs.Server.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="keywords" content="Masa.Blazor,Masa Blazor,Blazor,BlazorComponent,Blazor组件库,dotnet,Material Design,数闪,组件库,webassembly,wasm" />
    <meta name="description" content="基于Material Design和BlazorComponent的交互能力提供标准的Blazor组件库。Provide standard blazor component library based on the interaction ability of material design and BlazorComponent" />
    <title>MASA Blazor</title>
    <base href="~/" />
    <link rel="icon" href="https://cdn.masastack.com/stack/images/website/masa-blazor/miniLogo.png" type="image/x-icon">
    <link href="_content/Masa.Blazor/css/masa-blazor.min.css" rel="stylesheet">
    <link href="_content/Masa.Docs.Shared/css/docs.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/@("@mdi")/font@5.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/materialicons/materialicons.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/fontawesome/v5.0.13/css/all.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/quill/1.3.6/quill.snow.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/quill/1.3.6/quill.bubble.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/quill/1.3.6/quill-emoji.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/quill/1.3.6/quilljs-markdown-common-style.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/vditor/3.8.12/dist/index.css" rel="stylesheet">
    <link href="https://cdn.masastack.com/npm/docsearch/docsearch.css" rel="stylesheet">
    <link href="https://cdn.bootcdn.net/ajax/libs/prism-themes/1.9.0/prism-material-light.min.css" rel="stylesheet">
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_content/Microsoft.AspNetCore.Components.CustomElements/BlazorCustomElements.js"></script>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/BlazorComponent/js/blazor-component.js"></script>
    <script src="https://cdn.masastack.com/npm/echarts/5.1.1/echarts.min.js"></script>
    <script src="_content/Masa.Blazor.Doc/echarts/theme/vintage.js"></script>
    <script src="https://cdn.masastack.com/npm/quill/1.3.6/quill.js"></script>
    <script src="https://cdn.masastack.com/npm/quill/1.3.6/quilljs-markdown.js"></script>
    <script src="https://cdn.masastack.com/npm/quill/1.3.6/quill-emoji.js"></script>
    <script src="https://cdn.masastack.com/npm/vditor/3.8.12/dist/index.min.js"></script>
    <script src="_content/Masa.Blazor.Doc/quill/quill-blot-formatter.min.js"></script>
    <script src="https://cdn.masastack.com/npm/docsearch/docsearch.js"></script>
    <script src="https://cdn.masastack.com/npm/sortable/Sortable.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/prism/9000.0.1/prism.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/prism/9000.0.1/components/prism-csharp.min.js"></script>
    <script src="js/prism-cshtml.min.js"></script>
    <script src="js/prism-normalize-whitespace.min.js"></script>
    <script>
        Blazor.start().then(function () {
            Quill.register('modules/blotFormatter', QuillBlotFormatter.default);
        })

        window.setCookie = function (name, value) {
            document.cookie = `$ {
                name
            } = $ {
                escape(value.toString())
            };
            path = /;}`;
        }

        window.getCookie = function (name) {
            const reg = new RegExp(`(^| )${name}=([^;]*)(;|$)`);
            const arr = document.cookie.match(reg);
            if (arr) {
                return unescape(arr[2]);
            }
            return null;
        }

        window.getCurrentDocSearchLanguage = function () {
            const language = window.getCookie('Masa_I18nConfig_Language');
            if (!language || language === 'zh-CN') {
                return 'zh';
            }
            return 'en';
        }

        window.addDoSearch = function (isMobile) {
            const container = `#docsearch${isMobile ? "-mobile" : ""}`
            docsearch({
                container,
                appId: 'TSB4MACWRC',
                indexName: 'blazor-masastack',
                apiKey: 'a38a8d4b58c5648825ba3fafce8b6ffa',
                debug: false,
                //searchParameters: {
                //    facetFilters: ['language:'+ getCurrentDocSearchLanguage()]
                //}
            });
        }

        window.getTimeOffset = function () {
            return new Date().getTimezoneOffset();
        }
        
        window.BlazorComponent.markdownItRules = function (key, markdownIt) {
          if (key !== "document") return

          addHeadingRules(markdownIt)

          function addHeadingRules (md) {
            md.renderer.rules.heading_open = (tokens, idx, options, env, self) => {
              const level = tokens[idx].markup.length
              const next = tokens[idx + 1]
              const children = next ? next.children : []
              const [, href] = children[2].attrs[0]
              const content = children[0].content
          
              tokens[idx].tag = 'app-heading'
              tokens[idx].attrSet('content', content)
              tokens[idx].attrSet('href', href)
              tokens[idx].attrSet('level', level)
          
              return self.renderToken(tokens, idx, options)
            }
            md.renderer.rules.heading_close = (tokens, idx, options, env, self) => {
              tokens[idx].tag = 'app-heading'
          
              return self.renderToken(tokens, idx, options)
            }
          }
        }
    </script>
</body>
</html>
